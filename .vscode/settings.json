{
    "C_Cpp.codeAnalysis.clangTidy.checks.disabled": [
        "abseil-*",
        "abseil-cleanup-ctad",
        "abseil-duration-*",
        "abseil-duration-addition",
        "abseil-duration-comparison",
        "abseil-duration-conversion-cast",
        "abseil-duration-division",
        "abseil-duration-factory-*",
        "abseil-duration-factory-float",
        "abseil-duration-factory-scale",
        "abseil-duration-subtraction",
        "abseil-duration-unnecessary-conversion",
        "abseil-faster-strsplit-delimiter",
        "abseil-no-*",
        "abseil-no-internal-dependencies",
        "abseil-no-namespace",
        "abseil-redundant-strcat-calls",
        "abseil-str-cat-append",
        "abseil-string-find-*",
        "abseil-string-find-startswith",
        "abseil-string-find-str-contains",
        "abseil-time-*",
        "abseil-time-comparison",
        "abseil-time-subtraction",
        "abseil-upgrade-duration-conversions",
        "altera-*",
        "altera-id-dependent-backward-branch",
        "altera-kernel-name-restriction",
        "altera-single-work-item-barrier",
        "altera-struct-pack-align",
        "altera-unroll-loops",
        "android-*",
        "android-cloexec-*",
        "android-cloexec-accept",
        "android-cloexec-accept4",
        "android-cloexec-creat",
        "android-cloexec-dup",
        "android-cloexec-epoll-*",
        "android-cloexec-epoll-create",
        "android-cloexec-epoll-create1",
        "android-cloexec-fopen",
        "android-cloexec-inotify-*",
        "android-cloexec-inotify-init",
        "android-cloexec-inotify-init1",
        "android-cloexec-memfd-create",
        "android-cloexec-open",
        "android-cloexec-pipe",
        "android-cloexec-pipe2",
        "android-cloexec-socket",
        "android-comparison-in-temp-failure-retry",
        "boost-use-to-string",
        "bugprone-*",
        "bugprone-argument-comment",
        "bugprone-assert-side-effect",
        "bugprone-bad-signal-to-kill-thread",
        "bugprone-bool-pointer-implicit-conversion",
        "bugprone-branch-clone",
        "bugprone-copy-constructor-init",
        "bugprone-dangling-handle",
        "bugprone-dynamic-static-initializers",
        "bugprone-easily-swappable-parameters",
        "bugprone-exception-escape",
        "bugprone-fold-init-type",
        "bugprone-forward-declaration-namespace",
        "bugprone-forwarding-reference-overload",
        "bugprone-implicit-widening-of-multiplication-result",
        "bugprone-inaccurate-erase",
        "bugprone-incorrect-roundings",
        "bugprone-infinite-loop",
        "bugprone-integer-division",
        "bugprone-lambda-function-name",
        "bugprone-macro-parentheses",
        "bugprone-macro-repeated-side-effects",
        "bugprone-misplaced-*",
        "bugprone-misplaced-operator-in-strlen-in-alloc",
        "bugprone-misplaced-pointer-arithmetic-in-alloc",
        "bugprone-misplaced-widening-cast",
        "bugprone-move-forwarding-reference",
        "bugprone-multiple-statement-macro",
        "bugprone-narrowing-conversions",
        "bugprone-no-escape",
        "bugprone-not-null-terminated-result",
        "bugprone-parent-virtual-call",
        "bugprone-posix-return",
        "bugprone-redundant-branch-condition",
        "bugprone-reserved-identifier",
        "bugprone-shared-ptr-array-mismatch",
        "bugprone-signal-handler",
        "bugprone-signed-char-misuse",
        "bugprone-sizeof-*",
        "bugprone-sizeof-container",
        "bugprone-sizeof-expression",
        "bugprone-spuriously-wake-up-functions",
        "bugprone-string-*",
        "bugprone-string-constructor",
        "bugprone-string-integer-assignment",
        "bugprone-string-literal-with-embedded-nul",
        "bugprone-stringview-nullptr",
        "bugprone-suspicious-*",
        "bugprone-suspicious-enum-usage",
        "bugprone-suspicious-include",
        "bugprone-suspicious-memory-comparison",
        "bugprone-suspicious-memset-usage",
        "bugprone-suspicious-missing-comma",
        "bugprone-suspicious-semicolon",
        "bugprone-suspicious-string-compare",
        "bugprone-swapped-arguments",
        "bugprone-terminating-continue",
        "bugprone-throw-keyword-missing",
        "bugprone-too-small-loop-variable",
        "bugprone-unchecked-optional-access",
        "bugprone-undefined-memory-manipulation",
        "bugprone-undelegated-constructor",
        "bugprone-unhandled-*",
        "bugprone-unhandled-exception-at-new",
        "bugprone-unhandled-self-assignment",
        "bugprone-unused-raii",
        "bugprone-unused-return-value",
        "bugprone-use-after-move",
        "bugprone-virtual-near-miss",
        "cert-*",
        "cert-con*",
        "cert-con36-c",
        "cert-con54-cpp",
        "cert-dcl*",
        "cert-dcl03-c",
        "cert-dcl16-c",
        "cert-dcl21-cpp",
        "cert-dcl37-c",
        "cert-dcl50-cpp",
        "cert-dcl51-cpp",
        "cert-dcl54-cpp",
        "cert-dcl58-cpp",
        "cert-dcl59-cpp",
        "cert-env33-c",
        "cert-err*",
        "cert-err09-cpp",
        "cert-err33-c",
        "cert-err34-c",
        "cert-err52-cpp",
        "cert-err58-cpp",
        "cert-err60-cpp",
        "cert-err61-cpp",
        "cert-exp42-c",
        "cert-fio38-c",
        "cert-flp*",
        "cert-flp30-c",
        "cert-flp37-c",
        "cert-mem57-cpp",
        "cert-msc*",
        "cert-msc30-c",
        "cert-msc32-c",
        "cert-msc50-cpp",
        "cert-msc51-cpp",
        "cert-oop*",
        "cert-oop11-cpp",
        "cert-oop54-cpp",
        "cert-oop57-cpp",
        "cert-oop58-cpp",
        "cert-pos*",
        "cert-pos44-c",
        "cert-pos47-c",
        "cert-sig30-c",
        "cert-str34-c",
        "clang-analyzer-*",
        "clang-analyzer-core.*",
        "clang-analyzer-core.CallAndMessage",
        "clang-analyzer-core.DivideZero",
        "clang-analyzer-core.DynamicTypePropagation",
        "clang-analyzer-core.NonNullParamChecker",
        "clang-analyzer-core.NullDereference",
        "clang-analyzer-core.StackAddressEscape",
        "clang-analyzer-core.UndefinedBinaryOperatorResult",
        "clang-analyzer-core.uninitialized.*",
        "clang-analyzer-core.uninitialized.ArraySubscript",
        "clang-analyzer-core.uninitialized.Assign",
        "clang-analyzer-core.uninitialized.Branch",
        "clang-analyzer-core.uninitialized.CapturedBlockVariable",
        "clang-analyzer-core.uninitialized.UndefReturn",
        "clang-analyzer-core.VLASize",
        "clang-analyzer-cplusplus.*",
        "clang-analyzer-cplusplus.InnerPointer",
        "clang-analyzer-cplusplus.Move",
        "clang-analyzer-cplusplus.NewDelete",
        "clang-analyzer-cplusplus.NewDeleteLeaks",
        "clang-analyzer-deadcode.DeadStores",
        "clang-analyzer-nullablity.*",
        "clang-analyzer-nullability.NullableDereferenced",
        "clang-analyzer-nullability.NullablePassedToNonnull",
        "clang-analyzer-nullability.NullableReturnedFromNonnull",
        "clang-analyzer-nullability.NullPassedToNonnull",
        "clang-analyzer-nullability.NullReturnedFromNonnull",
        "clang-analyzer-optin.*",
        "clang-analyzer-optin.cplusplus.*",
        "clang-analyzer-optin.cplusplus.UninitializedObject",
        "clang-analyzer-optin.cplusplus.VirtualCall",
        "clang-analyzer-optin.mpi.MPI-Checker",
        "clang-analyzer-optin.osx.*",
        "clang-analyzer-optin.osx.cocoa.localizability.*",
        "clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker",
        "clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker",
        "clang-analyzer-optin.osx.OSObjectCStyleCast",
        "clang-analyzer-optin.performance.*",
        "clang-analyzer-optin.performance.GCDAntipattern",
        "clang-analyzer-optin.performance.Padding",
        "clang-analyzer-optin.portability.UnixAPI",
        "clang-analyzer-osx.*",
        "clang-analyzer-osx.API",
        "clang-analyzer-osx.cocoa.*",
        "clang-analyzer-osx.cocoa.AtSync",
        "clang-analyzer-osx.cocoa.AutoreleaseWrite",
        "clang-analyzer-osx.cocoa.ClassRelease",
        "clang-analyzer-osx.cocoa.Dealloc",
        "clang-analyzer-osx.cocoa.IncompatibleMethodTypes",
        "clang-analyzer-osx.cocoa.Loops",
        "clang-analyzer-osx.cocoa.MissingSuperCall",
        "clang-analyzer-osx.cocoa.NilArg",
        "clang-analyzer-osx.cocoa.NonNilReturnValue",
        "clang-analyzer-osx.cocoa.NSAutoreleasePool",
        "clang-analyzer-osx.cocoa.NSError",
        "clang-analyzer-osx.cocoa.ObjCGenerics",
        "clang-analyzer-osx.cocoa.RetainCount",
        "clang-analyzer-osx.cocoa.RetainCountBase",
        "clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak",
        "clang-analyzer-osx.cocoa.SelfInit",
        "clang-analyzer-osx.cocoa.SuperDealloc",
        "clang-analyzer-osx.cocoa.UnusedIvars",
        "clang-analyzer-osx.cocoa.VariadicMethodTypes",
        "clang-analyzer-osx.coreFoundation.*",
        "clang-analyzer-osx.coreFoundation.CFError",
        "clang-analyzer-osx.coreFoundation.CFNumber",
        "clang-analyzer-osx.coreFoundation.CFRetainRelease",
        "clang-analyzer-osx.coreFoundation.containers.*",
        "clang-analyzer-osx.coreFoundation.containers.OutOfBounds",
        "clang-analyzer-osx.coreFoundation.containers.PointerSizedValues",
        "clang-analyzer-osx.MIG",
        "clang-analyzer-osx.NumberObjectConversion",
        "clang-analyzer-osx.ObjCProperty",
        "clang-analyzer-osx.OSObjectRetainCount",
        "clang-analyzer-osx.SecKeychainAPI",
        "clang-analyzer-security.*",
        "clang-analyzer-security.FloatLoopCounter",
        "clang-analyzer-security.insecureAPI.*",
        "clang-analyzer-security.insecureAPI.bcmp",
        "clang-analyzer-security.insecureAPI.bcopy",
        "clang-analyzer-security.insecureAPI.bzero",
        "clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling",
        "clang-analyzer-security.insecureAPI.getpw",
        "clang-analyzer-security.insecureAPI.gets",
        "clang-analyzer-security.insecureAPI.mkstemp",
        "clang-analyzer-security.insecureAPI.mktemp",
        "clang-analyzer-security.insecureAPI.rand",
        "clang-analyzer-security.insecureAPI.strcpy",
        "clang-analyzer-security.insecureAPI.UncheckedReturn",
        "clang-analyzer-security.insecureAPI.vfork",
        "clang-analyzer-unix.*",
        "clang-analyzer-unix.API",
        "clang-analyzer-unix.cstring.*",
        "clang-analyzer-unix.cstring.BadSizeArg",
        "clang-analyzer-unix.cstring.NullArg",
        "clang-analyzer-unix.Malloc",
        "clang-analyzer-unix.MallocSizeof",
        "clang-analyzer-unix.MismatchedDeallocator",
        "clang-analyzer-unix.Vfork",
        "clang-analyzer-valist.*",
        "clang-analyzer-valist.CopyToSelf",
        "clang-analyzer-valist.Uninitialized",
        "clang-analyzer-valist.Unterminated",
        "concurrency-*",
        "concurrency-mt-unsafe",
        "concurrency-thread-canceltype-asynchronous",
        "cppcoreguidelines-*",
        "cppcoreguidelines-avoid-*",
        "cppcoreguidelines-avoid-c-arrays",
        "cppcoreguidelines-avoid-goto",
        "cppcoreguidelines-avoid-magic-numbers",
        "cppcoreguidelines-avoid-non-const-global-variables",
        "cppcoreguidelines-c-copy-assignment-signature",
        "cppcoreguidelines-explicit-virtual-functions",
        "cppcoreguidelines-init-variables",
        "cppcoreguidelines-interfaces-global-init",
        "cppcoreguidelines-macro-to-enum",
        "cppcoreguidelines-macro-usage",
        "cppcoreguidelines-narrowing-conversions",
        "cppcoreguidelines-no-malloc",
        "cppcoreguidelines-non-private-member-variables-in-classes",
        "cppcoreguidelines-owning-memory",
        "cppcoreguidelines-prefer-member-initializer",
        "cppcoreguidelines-pro-bounds-*",
        "cppcoreguidelines-pro-bounds-array-to-pointer-decay",
        "cppcoreguidelines-pro-bounds-constant-array-index",
        "cppcoreguidelines-pro-bounds-pointer-arithmetic",
        "cppcoreguidelines-pro-type-*",
        "cppcoreguidelines-pro-type-const-cast",
        "cppcoreguidelines-pro-type-cstyle-cast",
        "cppcoreguidelines-pro-type-member-init",
        "cppcoreguidelines-pro-type-reinterpret-cast",
        "cppcoreguidelines-pro-type-static-cast-downcast",
        "cppcoreguidelines-pro-type-union-access",
        "cppcoreguidelines-pro-type-vararg",
        "cppcoreguidelines-slicing",
        "cppcoreguidelines-special-member-functions",
        "cppcoreguidelines-virtual-class-destructor",
        "darwin-*",
        "darwin-avoid-spinlock",
        "darwin-dispatch-once-nonstatic",
        "fuchsia-*",
        "fuchsia-default-*",
        "fuchsia-default-arguments-calls",
        "fuchsia-default-arguments-declarations",
        "fuchsia-header-anon-namespaces",
        "fuchsia-multiple-inheritance",
        "fuchsia-overloaded-operator",
        "fuchsia-statically-constructed-objects",
        "fuchsia-trailing-return",
        "fuchsia-virtual-inheritance",
        "google-*",
        "google-build-*",
        "google-build-explicit-make-pair",
        "google-build-namespaces",
        "google-build-using-namespace",
        "google-default-arguments",
        "google-explicit-constructor",
        "google-global-names-in-headers",
        "google-objc-*",
        "google-objc-avoid-*",
        "google-objc-avoid-nsobject-new",
        "google-objc-avoid-throwing-exception",
        "google-objc-function-naming",
        "google-objc-global-variable-declaration",
        "google-readability-*",
        "google-readability-avoid-underscore-in-googletest-name",
        "google-readability-braces-around-statements",
        "google-readability-casting",
        "google-readability-function-size",
        "google-readability-namespace-comments",
        "google-readability-todo",
        "google-runtime-*",
        "google-runtime-int",
        "google-runtime-operator",
        "google-upgrade-googletest-case",
        "hicpp-*",
        "hicpp-avoid-*",
        "hicpp-avoid-c-arrays",
        "hicpp-avoid-goto",
        "hicpp-braces-around-statements",
        "hicpp-deprecated-headers",
        "hicpp-exception-baseclass",
        "hicpp-explicit-conversions",
        "hicpp-function-size",
        "hicpp-invalid-access-moved",
        "hicpp-member-init",
        "hicpp-move-const-arg",
        "hicpp-multiway-paths-covered",
        "hicpp-named-parameter",
        "hicpp-new-delete-operators",
        "hicpp-no-*",
        "hicpp-no-array-decay",
        "hicpp-no-assembler",
        "hicpp-no-malloc",
        "hicpp-noexcept-move",
        "hicpp-signed-bitwise",
        "hicpp-special-member-functions",
        "hicpp-static-assert",
        "hicpp-undelegated-constructor",
        "hicpp-uppercase-literal-suffix",
        "hicpp-use-*",
        "hicpp-use-auto",
        "hicpp-use-emplace",
        "hicpp-use-equals-*",
        "hicpp-use-equals-default",
        "hicpp-use-equals-delete",
        "hicpp-use-noexcept",
        "hicpp-use-nullptr",
        "hicpp-use-override",
        "hicpp-vararg",
        "linuxkernel-must-check-errs",
        "llvm-*",
        "llvm-else-after-return",
        "llvm-header-guard",
        "llvm-include-order",
        "llvm-namespace-comment",
        "llvm-prefer-*",
        "llvm-prefer-isa-or-dyn-cast-in-conditionals",
        "llvm-prefer-register-over-unsigned",
        "llvm-qualified-auto",
        "llvm-twine-local",
        "llvmlibc-*",
        "llvmlibc-callee-namespace",
        "llvmlibc-implementation-in-namespace",
        "llvmlibc-restrict-system-libc-headers",
        "misc-*",
        "misc-confusable-identifiers",
        "misc-const-correctness",
        "misc-definitions-in-headers",
        "misc-misleading-*",
        "misc-misleading-bidirectional",
        "misc-misleading-identifier",
        "misc-misplaced-const",
        "misc-new-delete-overloads",
        "misc-no-recursion",
        "misc-non-*",
        "misc-non-copyable-objects",
        "misc-non-private-member-variables-in-classes",
        "misc-redundant-expression",
        "misc-static-assert",
        "misc-throw-by-value-catch-by-reference",
        "misc-unconventional-assign-operator",
        "misc-uniqueptr-reset-release",
        "misc-unused-*",
        "misc-unused-alias-decls",
        "misc-unused-parameters",
        "misc-unused-using-decls",
        "modernize-*",
        "modernize-avoid-*",
        "modernize-avoid-bind",
        "modernize-avoid-c-arrays",
        "modernize-concat-nested-namespaces",
        "modernize-deprecated-*",
        "modernize-deprecated-headers",
        "modernize-deprecated-ios-base-aliases",
        "modernize-loop-convert",
        "modernize-macro-to-enum",
        "modernize-make-*",
        "modernize-make-shared",
        "modernize-make-unique",
        "modernize-pass-by-value",
        "modernize-raw-string-literal",
        "modernize-redundant-void-arg",
        "modernize-replace-*",
        "modernize-replace-auto-ptr",
        "modernize-replace-disallow-copy-and-assign-macro",
        "modernize-replace-random-shuffle",
        "modernize-return-braced-init-list",
        "modernize-shrink-to-fit",
        "modernize-unary-static-assert",
        "modernize-use-*",
        "modernize-use-auto",
        "modernize-use-bool-literals",
        "modernize-use-default",
        "modernize-use-default-member-init",
        "modernize-use-emplace",
        "modernize-use-equals-*",
        "modernize-use-equals-default",
        "modernize-use-equals-delete",
        "modernize-use-nodiscard",
        "modernize-use-noexcept",
        "modernize-use-nullptr",
        "modernize-use-override",
        "modernize-use-trailing-return-type",
        "modernize-use-transparent-functors",
        "modernize-use-uncaught-exceptions",
        "modernize-use-using",
        "mpi-*",
        "mpi-buffer-deref",
        "mpi-type-mismatch",
        "objc-*",
        "objc-assert-equals",
        "objc-avoid-nserror-init",
        "objc-dealloc-in-category",
        "objc-forbidden-subclassing",
        "objc-missing-hash",
        "objc-nsinvocation-argument-lifetime",
        "objc-property-declaration",
        "objc-super-self",
        "openmp-*",
        "openmp-exception-escape",
        "openmp-use-default-none",
        "performance-*",
        "performance-faster-string-find",
        "performance-for-range-copy",
        "performance-implicit-conversion-in-loop",
        "performance-inefficient-*",
        "performance-inefficient-algorithm",
        "performance-inefficient-string-concatenation",
        "performance-inefficient-vector-operation",
        "performance-move-*",
        "performance-move-const-arg",
        "performance-move-constructor-init",
        "performance-no-*",
        "performance-no-automatic-move",
        "performance-no-int-to-ptr",
        "performance-noexcept-move-constructor",
        "performance-trivially-destructible",
        "performance-type-promotion-in-math-fn",
        "performance-unnecessary-*",
        "performance-unnecessary-copy-initialization",
        "performance-unnecessary-value-param",
        "portability-*",
        "portability-restrict-system-includes",
        "portability-simd-intrinsics",
        "portability-std-allocator-const",
        "readability-*",
        "readability-avoid-const-params-in-decls",
        "readability-braces-around-statements",
        "readability-const-return-type",
        "readability-container-*",
        "readability-container-contains",
        "readability-container-data-pointer",
        "readability-container-size-empty",
        "readability-convert-member-functions-to-static",
        "readability-delete-null-pointer",
        "readability-duplicate-include",
        "readability-else-after-return",
        "readability-function-*",
        "readability-function-cognitive-complexity",
        "readability-function-size",
        "readability-identifier-*",
        "readability-identifier-length",
        "readability-identifier-naming",
        "readability-implicit-bool-conversion",
        "readability-inconsistent-declaration-parameter-name",
        "readability-isolate-declaration",
        "readability-magic-numbers",
        "readability-make-member-function-const",
        "readability-misleading-indentation",
        "readability-misplaced-array-index",
        "readability-named-parameter",
        "readability-non-const-parameter",
        "readability-qualified-auto",
        "readability-redundant-*",
        "readability-redundant-access-specifiers",
        "readability-redundant-control-flow",
        "readability-redundant-declaration",
        "readability-redundant-function-ptr-dereference",
        "readability-redundant-member-init",
        "readability-redundant-preprocessor",
        "readability-redundant-smartptr-get",
        "readability-redundant-string-*",
        "readability-redundant-string-cstr",
        "readability-redundant-string-init",
        "readability-simplify-*",
        "readability-simplify-boolean-expr",
        "readability-simplify-subscript-expr",
        "readability-static-*",
        "readability-static-accessed-through-instance",
        "readability-static-definition-in-anonymous-namespace",
        "readability-string-compare",
        "readability-suspicious-call-argument",
        "readability-uniqueptr-delete-release",
        "readability-uppercase-literal-suffix",
        "readability-use-anyofallof",
        "zircon-temporary-objects"
    ]
}